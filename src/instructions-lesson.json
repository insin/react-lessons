{
  "name": "React Lessons Instructions",
  "instructions": true,
  "steps": [
    {
      "text": "React Lessons is a tool for creating - and taking - interactive [React](http://facebook.github.io/react/) tutorials, inspired by the [Ractive.js Tutorial](http://learn.ractivejs.org).\n\nA tutorial consists of a number of lessons. Each lesson can include one or more steps (numbered across the top-right of the page).\n\nA lesson step consists of:\n\n* Prose providing learning material.\n\n* An outline for code to be written to practice the step's material.\n\nClick the \"next\" link below to proceed to the next step and try some coding.",
      "code": "",
      "solution": ""
    },
    {
      "text": "## Writing JavaScript\n\nJavaScript can be written in the panel on the right and executed by pressing\nShift+Enter or using the Execute button.\n\nThe following variables are available for use in code:\n\n* `React` - the React library.\n* `output` - the DOM node for the output area below.\n\nCode is transformed with [Babel](http://babeljs.io) before being executed, so you can use:\n\n* [JSX](http://facebook.github.io/react/docs/jsx-in-depth.html) - the XML-like syntax React uses to make generating content in JavaScript more pleasant.\n* [ECMAScript 6 features](http://babeljs.io/docs/learn-es2015/#ecmascript-6-features)\n* [ECMAScript 7 proposals](http://babeljs.io/docs/usage/experimental/) experimentally supported by Babel.\n\n### Coding time!\n\nLet's do some coding practice to get started.\n\nModify the code on the right so the output reads \"Hello world!\" instead of \"Helloâ€¦\"\n\nIf you make a mess of it, click the \"Reset\" button to revert your changes.\n\nIf you're stumped, click the \"Fix code\" button to view and run the solution.",
      "code": "React.render(<h1>Hello&hellip;</h1>, output)",
      "solution": "React.render(<h1>Hello world!</h1>, output)"
    },
    {
      "text": "## Editing lessons\n\nUse the \"Edit Mode\" checkbox to toggle editing mode.\n\nIn editing mode, you can change the lesson name and edit the content of each step.\n\n### Step prose\n\nStep prose is written in [Markdown](http://daringfireball.net/projects/markdown/basics), with support for additional [GitHub Flavored Markdown](https://help.github.com/articles/github-flavored-markdown/) features.\n\n### Step code & solution\n\nIn editing mode, \"Code\" and \"Solution\" tabs will appear in the coding area:\n\n* Code is what the user will see in the coding panel when they open the step.\n\n  **Note:** Code will be automatically executed each time the step is opened.\n\n* Solution (if provided) will allow use of the \"Fix code\" button to see a solution for the coding challenge.",
      "code": "BadSyntax",
      "solution": "React.render(<p>Good syntax.</p>, output)"
    },
    {
      "text": "## Creating and deleting lessons and steps\n\nIn editing mode, extra toolbar buttons are also displayed to allow you to add new lessons and steps, or to delete the current lesson or step.\n\nWhen you add more lessons to a tutorial, a menu will pop up on the left side of the page to allow you to navigate between them.\n\nClick \"Add Lesson\" now to give it a go.",
      "code": "",
      "solution": ""
    },
    {
      "text": "## Exporting lessons and tutorials\n\nYou can export the current lesson using the \"Export Lesson\" button, or the complete tutorial using \"Export Tutorial\" button.\n\nYou will be prompted to download a `.json` file containing exported data.\n\n## Importing lessons and tutorials\n\nTo import a lesson or a tutorial, use the \"Import Lesson(s)\" button to select a `.json` file, or drag and drop a `.json` file anywhere on the page.\n\n**Warning:** if you import a tutorial, its lessons will replace *everything* you currently have.",
      "code": "",
      "solution": ""
    }
  ]
}
